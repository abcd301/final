<?xml version="1.0" encoding="UTF-8"?>
<sequence name="Kacha-Tunes_Validate" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <switch source="get-property('txnType')">
        <case regex="usd-usd">
            <payloadFactory media-type="xml">
                <format>
                    <soapenv:Envelope xmlns:fun="http://temenos.com/FUNDSTRANSFERACTRINCOM" xmlns:pay="http://temenos.com/PAYIN" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                        <soapenv:Header/>
                        <soapenv:Body>
                            <pay:PAYIN_Validate>
                                <WebRequestCommon xmlns="">
                                    <!--Optional:-->
                                    <company>ET0010001</company>
                                    <password>$1</password>
                                    <userName>$2</userName>
                                </WebRequestCommon>
                                <OfsFunction xmlns=""/>
                                <FUNDSTRANSFERACTRINCOMType id="" xmlns="">
                                    <!--Optional:-->
                                    <fun:TransactionType>$3</fun:TransactionType>
                                    <!--Optional:-->
                                    <fun:DebitAccount>$4</fun:DebitAccount>
                                    <!--Optional:-->
                                    <fun:DebitCurrency>USD</fun:DebitCurrency>
                                    <!--Optional:-->
                                    <fun:DebitAmount>$5</fun:DebitAmount>
                                    <!--Optional:-->
                                    <fun:DebitNarrative>$6</fun:DebitNarrative>
                                    <!--Optional:-->
                                    <fun:CreditNarrative>$11</fun:CreditNarrative>
                                    <!--Optional:-->
                                    <fun:CreditAccount>$8</fun:CreditAccount>
                                    <!--Optional:-->
                                    <fun:CreditCurrency>USD</fun:CreditCurrency>
                                    <!--Optional:-->
                                    <fun:gORDERINGCUST g="1">
                                        <!--Zero or more repetitions:-->
                                        <fun:OrderedBy>$10</fun:OrderedBy>
                                    </fun:gORDERINGCUST>
                                    <!--Optional:-->
                                    <fun:MMTTransactionId>$11</fun:MMTTransactionId>
                                </FUNDSTRANSFERACTRINCOMType>
                            </pay:PAYIN_Validate>
                        </soapenv:Body>
                    </soapenv:Envelope>
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('ProdPass')"/>
                    <arg evaluator="xml" expression="get-property('ProdUser')"/>
                    <arg evaluator="xml" expression="get-property('transactionType')"/>
                    <arg evaluator="xml" expression="get-property('account')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('creditedAmount')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('paymentDetail')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('fromAccount')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('creditedAccount')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('creditCurrency')"/>
                    <arg evaluator="xml" expression="get-property('user')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('externalRef')" xmlns:ns="http://org.apache.synapse/xsd"/>
                </args>
            </payloadFactory>
        </case>
        <case regex="usd-etb">
            <property name="transactionType" scope="default" type="STRING" value="ACFF"/>
            <payloadFactory media-type="xml">
                <format>
                    <soapenv:Envelope xmlns:fun="http://temenos.com/FUNDSTRANSFERACTRINCOM" xmlns:pay="http://temenos.com/PAYIN" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                        <soapenv:Header/>
                        <soapenv:Body>
                            <pay:PAYIN_Validate>
                                <WebRequestCommon xmlns="">
                                    <!--Optional:-->
                                    <company>ET0010001</company>
                                    <password>$1</password>
                                    <userName>$2</userName>
                                </WebRequestCommon>
                                <OfsFunction xmlns=""/>
                                <FUNDSTRANSFERACTRINCOMType id="" xmlns="">
                                    <!--Optional:-->
                                    <fun:TransactionType>$3</fun:TransactionType>
                                    <!--Optional:-->
                                    <fun:DebitAccount>USD1792200010019</fun:DebitAccount>
                                    <!--Optional:-->
                                    <fun:DebitCurrency>USD</fun:DebitCurrency>
                                    <!--Optional:-->
                                    <fun:DebitAmount>$4</fun:DebitAmount>
                                    <!--Optional:-->
                                    <fun:DebitNarrative>$5</fun:DebitNarrative>
                                    <!--Optional:-->
                                    <fun:CreditNarrative>$6</fun:CreditNarrative>
                                    <!--Optional:-->
                                    <fun:CreditAccount>$7</fun:CreditAccount>
                                    <!--Optional:-->
                                    <fun:CreditCurrency>ETB</fun:CreditCurrency>
                                    <!--Optional:-->
                                    <fun:gORDERINGCUST g="1">
                                        <!--Zero or more repetitions:-->
                                        <fun:OrderedBy>$8</fun:OrderedBy>
                                    </fun:gORDERINGCUST>
                                </FUNDSTRANSFERACTRINCOMType>
                            </pay:PAYIN_Validate>
                        </soapenv:Body>
                    </soapenv:Envelope>
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('ProdPass')"/>
                    <arg evaluator="xml" expression="get-property('ProdUser')"/>
                    <arg evaluator="xml" expression="get-property('transactionType')"/>
                    <arg evaluator="xml" expression="get-property('debitedAmount')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('paymentDetail')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('externalRef')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('creditedAccount')"/>
                    <arg evaluator="xml" expression="get-property('user')" xmlns:ns="http://org.apache.synapse/xsd"/>
                </args>
            </payloadFactory>
        </case>
        <case regex="etb-etb">
            <property name="transactionType" scope="default" type="STRING" value="ACTK"/>
            <payloadFactory media-type="xml">
                <format>
                    <soapenv:Envelope xmlns:fun="http://temenos.com/FUNDSTRANSFERACTRINCOM" xmlns:pay="http://temenos.com/PAYIN" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                        <soapenv:Header/>
                        <soapenv:Body>
                            <pay:PAYIN_Validate>
                                <WebRequestCommon xmlns="">
                                    <!--Optional:-->
                                    <company>ET0010001</company>
                                    <password>$1</password>
                                    <userName>$2</userName>
                                </WebRequestCommon>
                                <OfsFunction xmlns=""/>
                                <FUNDSTRANSFERACTRINCOMType id="" xmlns="">
                                    <!--Optional:-->
                                    <fun:TransactionType>$3</fun:TransactionType>
                                    <!--Optional:-->
                                    <fun:DebitAccount>$4</fun:DebitAccount>
                                    <!--Optional:-->
                                    <fun:DebitCurrency>ETB</fun:DebitCurrency>
                                    <!--Optional:-->
                                    <fun:DebitAmount>$5</fun:DebitAmount>
                                    <!--Optional:-->
                                    <fun:DebitNarrative>$6</fun:DebitNarrative>
                                    <!--Optional:-->
                                    <fun:CreditNarrative>$7</fun:CreditNarrative>
                                    <!--Optional:-->
                                    <fun:CreditAccount>$8</fun:CreditAccount>
                                    <!--Optional:-->
                                    <fun:CreditCurrency>ETB</fun:CreditCurrency>
                                    <!--Optional:-->
                                    <fun:gORDERINGCUST g="1">
                                        <!--Zero or more repetitions:-->
                                        <fun:OrderedBy>$10</fun:OrderedBy>
                                    </fun:gORDERINGCUST>
                                    <!--Optional:-->
                                    <fun:MMTTransactionId>$11</fun:MMTTransactionId>
                                </FUNDSTRANSFERACTRINCOMType>
                            </pay:PAYIN_Validate>
                        </soapenv:Body>
                    </soapenv:Envelope>
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('ProdPass')"/>
                    <arg evaluator="xml" expression="get-property('ProdUser')"/>
                    <arg evaluator="xml" expression="get-property('transactionType')"/>
                    <arg evaluator="xml" expression="get-property('debitedAccount')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('debitedAmount')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('paymentDetail')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('fromAccount')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('creditedAccount')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('creditCurrency')"/>
                    <arg evaluator="xml" expression="get-property('user')" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="get-property('externalRef')" xmlns:ns="http://org.apache.synapse/xsd"/>
                </args>
            </payloadFactory>
        </case>
        <default>
            <log level="custom">
                <property name="txnType" value="not found"/>
            </log>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="400"/>
            <payloadFactory media-type="json">
                <format>{&#xd;
   "status": "fail",&#xd;
   "errorMessage":"Transaction type is not found",&#xd;
}</format>
                <args/>
            </payloadFactory>
        </default>
    </switch>
    <log level="full"/>
    <call>
        <endpoint key="KACHA-THUNES-TXN_EP"/>
    </call>
    <log level="full"/>
    <propertyGroup>
        <property expression="//successIndicator" name="successIndicator" scope="default" type="STRING" xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"/>
        <property expression="//transactionId" name="transactionId" scope="default" type="STRING" xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"/>
        <property expression="//messages" name="messages" scope="default" type="STRING" xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"/>
        <property expression="//ns4:gOVERRIDE[1]/ns4:OVERRIDE/text()" name="OVERRIDE" scope="default" type="STRING" xmlns:S="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns4="http://temenos.com/FUNDSTRANSFER"/>
        <property expression="substring-before(get-property('OVERRIDE'), '}')" name="override" scope="default" type="STRING"/>
        <property expression="substring-after(substring-before(//messages/text(), ' -'),'Account ')" name="inactive" scope="default" type="STRING"/>
        <property expression="//messages[contains(., 'ACCOUNT RECORD MISSING')]/text()" name="notFound1" scope="default" type="STRING" xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"/>
        <property expression="substring-before(get-property('notFound1'), 'G ')" name="notFound" scope="default" type="STRING"/>
    </propertyGroup>
    <filter xpath="get-property('notFound') ='CREDIT.ACCT.NO:1:1=ACCOUNT RECORD MISSIN'">
        <then>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="404"/>
            <log level="custom">
                <property expression="get-property('notFound')" name="message"/>
            </log>
            <payloadFactory media-type="json">
                <format>{&#xd;
	"status": "fail",    &#xd;
    "errorMessage": "Credited account not found."&#xd;
}</format>
                <args/>
            </payloadFactory>
            <respond/>
        </then>
        <else/>
    </filter>
    <filter xpath="get-property('messages') != ''">
        <then>
            <log level="custom">
                <property expression="get-property('messages')" name="messages"/>
            </log>
        </then>
        <else/>
    </filter>
    <filter xmlns:ns="http://org.apache.synapse/xsd" xpath="get-property('override')!=''">
        <then>
            <log level="custom">
                <property expression="get-property('override')" name="Override"/>
            </log>
            <log level="custom">
                <property expression="get-property('OVERRIDE')" name="Override Detail"/>
            </log>
            <switch source="get-property('override')">
                <case regex="POSTING.RESTRICT">
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="400"/>
                    <log level="custom">
                        <property name="Error Case" value="Frozen Account"/>
                    </log>
                    <payloadFactory media-type="json">
                        <format>{&#xd;
	"status": "fail",    &#xd;
    "errorMessage": "Temporarily Frozen Account"&#xd;
}</format>
                        <args/>
                    </payloadFactory>
                    <respond/>
                </case>
                <case regex="SAME.ACCT">
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="400"/>
                    <log>
                        <property name="Error Case" value="Debit and Credit account are the same"/>
                    </log>
                    <payloadFactory media-type="json">
                        <format>{&#xd;
	"status": "fail",    &#xd;
    "errorMessage": "Same Debit Credit Account"&#xd;
}</format>
                        <args/>
                    </payloadFactory>
                    <respond/>
                </case>
                <default>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="400"/>
                    <log level="custom">
                        <property name="Error Case" value="Default"/>
                    </log>
                    <payloadFactory media-type="json">
                        <format>{&#xd;
	"status": "fail",    &#xd;
    "errorMessage": "Currently Disabled Account"&#xd;
}</format>
                        <args/>
                    </payloadFactory>
                    <respond/>
                </default>
            </switch>
        </then>
        <else/>
    </filter>
    <filter xmlns:ns="http://org.apache.synapse/xsd" xpath="get-property('successIndicator')='Success'">
        <then/>
        <else>
            <switch source="get-property('messages')">
                <case regex="SECURITY VIOLATION DURING SIGN ON PROCESS">
                    <payloadFactory media-type="json">
                        <format>{&#xd;
	"status": "fail",    &#xd;
    "errorMessage": "Invalid credentials."&#xd;
}</format>
                        <args/>
                    </payloadFactory>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="401"/>
                    <respond/>
                </case>
                <case regex="INVALID/ NO SIGN ON NAME SUPPLIED DURING SIGN ON PROCESS">
                    <payloadFactory media-type="json">
                        <format>{ &#xd;
"status": "fail",   &#xd; "errorMessage": "Security violation during sign on process."&#xd;
}</format>
                        <args/>
                    </payloadFactory>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="999"/>
                    <respond/>
                </case>
                <case regex="CREDIT.CURRENCY:1:1=CREDIT ACCT CCY NOT EQ CREDIT CCY">
                    <payloadFactory media-type="json">
                        <format>{&#xd;
"status": "fail",  &#xd; "errorMessage": "Different currencies."&#xd;
}</format>
                        <args/>
                    </payloadFactory>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="400"/>
                    <respond/>
                </case>
                <default>
                    <filter xpath="get-property('inactive') != ''">
                        <then>
                            <payloadFactory media-type="json">
                                <format>{ &#xd;
"status": "fail",   &#xd;
 "errorMessage": "$1."&#xd;
}</format>
                                <args>
                                    <arg evaluator="xml" expression="get-property('inactive')"/>
                                </args>
                            </payloadFactory>
                            <property name="HTTP_SC" scope="axis2" type="STRING" value="400"/>
                            <respond/>
                        </then>
                        <else>
                            <payloadFactory media-type="json">
                                <format>{&#xd;
	"status": "fail",    &#xd;
    "errorMessage": "$1."&#xd;
}</format>
                                <args>
                                    <arg evaluator="xml" expression="get-property('messages')"/>
                                </args>
                            </payloadFactory>
                            <property name="HTTP_SC" scope="axis2" type="STRING" value="500"/>
                            <respond/>
                        </else>
                    </filter>
                </default>
            </switch>
        </else>
    </filter>
</sequence>
